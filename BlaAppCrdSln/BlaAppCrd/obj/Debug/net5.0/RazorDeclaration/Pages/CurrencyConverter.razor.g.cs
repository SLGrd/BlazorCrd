// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlaAppCrd.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 3 "D:\Tutorials\BlazorCrud\BlaAppCrdSln\BlaAppCrd\_Imports.razor"
using Microsoft.AspNetCore.Authentication;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Tutorials\BlazorCrud\BlaAppCrdSln\BlaAppCrd\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Tutorials\BlazorCrud\BlaAppCrdSln\BlaAppCrd\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Tutorials\BlazorCrud\BlaAppCrdSln\BlaAppCrd\_Imports.razor"
using System.Security.Principal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Tutorials\BlazorCrud\BlaAppCrdSln\BlaAppCrd\_Imports.razor"
using System.Threading;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\Tutorials\BlazorCrud\BlaAppCrdSln\BlaAppCrd\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\Tutorials\BlazorCrud\BlaAppCrdSln\BlaAppCrd\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\Tutorials\BlazorCrud\BlaAppCrdSln\BlaAppCrd\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\Tutorials\BlazorCrud\BlaAppCrdSln\BlaAppCrd\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\Tutorials\BlazorCrud\BlaAppCrdSln\BlaAppCrd\_Imports.razor"
using Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Tutorials\BlazorCrud\BlaAppCrdSln\BlaAppCrd\Pages\CurrencyConverter.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Tutorials\BlazorCrud\BlaAppCrdSln\BlaAppCrd\Pages\CurrencyConverter.razor"
using System.Net.Http.Headers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Tutorials\BlazorCrud\BlaAppCrdSln\BlaAppCrd\Pages\CurrencyConverter.razor"
using Syncfusion.Blazor.DropDowns;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Tutorials\BlazorCrud\BlaAppCrdSln\BlaAppCrd\Pages\CurrencyConverter.razor"
using Syncfusion.Blazor.SplitButtons;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Tutorials\BlazorCrud\BlaAppCrdSln\BlaAppCrd\Pages\CurrencyConverter.razor"
using Syncfusion.Blazor.Inputs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\Tutorials\BlazorCrud\BlaAppCrdSln\BlaAppCrd\Pages\CurrencyConverter.razor"
using CommonCrd.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\Tutorials\BlazorCrud\BlaAppCrdSln\BlaAppCrd\Pages\CurrencyConverter.razor"
using static CommonCrd.Code.GLB;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/CurrencyConverter")]
    public partial class CurrencyConverter : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 124 "D:\Tutorials\BlazorCrud\BlaAppCrdSln\BlaAppCrd\Pages\CurrencyConverter.razor"
       
    public string ValueCmb1 { get; set; } = string.Empty;
    public string ValueCmb2 { get; set; } = string.Empty;

    public double? Amt1 { get; set; } = 100.0;
    public double? Amt2 { get; set; } = 100.0;

    public string Msg { get; set; } = string.Empty;

    List<Moeda> Moedas = new List<Moeda>()
    {
        new Moeda( "BRL", "Brazilian Real"),
        new Moeda( "USD", "American Dollar"),
        new Moeda( "CAD", "Canadian Dollar")
    };

    protected override void OnInitialized() { base.OnInitialized(); }

    public void OnChangeCmb1( Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, Moeda> args) {
        ValueCmb1 = args.ItemData?.SymMoeda;}

    public void OnChangeCmb2( ChangeEventArgs<string, Moeda> args) { 
        ValueCmb2 = args.ItemData?.SymMoeda;}

    public async void EvaluateConversion()
    {
        if ( ValueCmb1.Equals(string.Empty)) { Msg = "Select currencies to convert "; return; }
        if ( ValueCmb2.Equals(string.Empty)) { Msg = "Select currencies to convert "; return; }

        //  Calls API and get conversion values
        await GetConversion();
        //  Forces screen refresh t display results
        this.StateHasChanged();
    }

    protected async Task<double> GetConversion()
    {
        double ConversionRate = 0.0;
        try
        {
            HttpClient h = new HttpClient();
            //  Define o modo de recebimento dos dados (JSON) . Poderia ser XML por ex;
            h.DefaultRequestHeaders.Accept.Add( new MediaTypeWithQualityHeaderValue("application/json"));
            //  Informa o endere√ßo base (parte fixa) da API
            h.BaseAddress = new Uri("https://free.currconv.com");   // ou h.BaseAddress = new Uri("https://free.currencyconverterapi.com");

            string CurrencyPair = ValueCmb1 + "_" + ValueCmb2;
            string Argument = "api/v7/convert?q=" + CurrencyPair + @"&compact=ultra&" + apiKey ;

            Msg = "getting quotes ...";
            //  Envia o request (getasync) com o URI universal resource identifier
            using (HttpResponseMessage m = await h.GetAsync( Argument))
            {
                if (m.IsSuccessStatusCode)
                {
                    var dados = await m.Content.ReadAsStringAsync();
                    ConversionRate = (double)Newtonsoft.Json.Linq.JObject.Parse(dados)[CurrencyPair];
                    Amt2 = Amt1 * ConversionRate;
                    Msg = "";
                }
                else
                {   Msg = "Erro : " + m.ReasonPhrase ; }
            }
        }   catch (Exception ex) { Msg = ex.Message; }

        return ConversionRate;
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
